---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: pipelinerun-generic
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "pull_request"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "main"

    # Fetch the git-clone task from hub, we are able to reference later on it
    # with taskRef and it will automatically be embedded into our pipeline.
    pipelinesascode.tekton.dev/task: "git-clone"

    {{- $c := 0 }}
    {{- range $index, $v := .Configs }}
    {{- $c = add $c 1 }}
    pipelinesascode.tekton.dev/task-{{ $c }}: "[{{ range $index, $element := $v.Tasks }}{{ if $index }}, {{ end }}{{ $element.Name }}{{ end }}]"
    {{- end }}

    # Use maven task from hub
    #
    # pipelinesascode.tekton.dev/task-1: "maven"

    # You can add more tasks by increasing the suffix number, you can specify them as array to have multiple of them.
    # browse the tasks you want to include from hub on https://hub.tekton.dev/
    #
    # pipelinesascode.tekton.dev/task-2: "[curl, buildah]"

    # How many runs we want to keep.
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    # The variable with brackets are special to Pipelines as Code
    # They will automatically be expanded with the events from Github.
    - name: repo_url
      value: "{{ `{{ repo_url }}` }}"
    - name: revision
      value: "{{ `{{ revision }}` }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: source
      - name: basic-auth
    tasks:
      - name: git-clone
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
      {{- range $c, $v := .Configs }}
      {{- range $t := $v.Tasks }}
      {{- if $v.Pattern }}
      # Match since files pattern: "{{ $v.Pattern }}" has matched
      {{- else }}
      # Match since the detected language for this Repository is "{{ $c }}"
      {{- end }}
      - name: {{ $c }}-{{ $t.Name }}
        taskRef:
          name: {{ $t.Name }}
      {{- if eq false $t.Workspace.Disabled }}
        workspaces:
          - name: {{- if $t.Workspace.Name }} {{ $t.Workspace.Name }}{{ else }} source{{ end }}
            workspace: source
      {{- end }}
      {{- if $t.Params }}
      {{- range $p := $t.Params }}
        params:
        - name: {{ $p.Name }}
          value: {{ $p.Value }}
      {{- end }}
      {{- if $t.RunAfter }}
        runAfter:
      {{- range $a := $t.RunAfter }}
        - {{ $a }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  # This workspace will inject secret to help the git-clone task to be able to
  # checkout the private repositories
  - name: basic-auth
    secret:
      secretName: "{{ `{{ git_auth_secret }}` }}"
